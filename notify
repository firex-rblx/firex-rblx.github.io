local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local TextService = game:GetService("TextService")
local Player = game:GetService("Players").LocalPlayer
local NotifGui = Instance.new("ScreenGui")
NotifGui.Name = "FireXNotify"
NotifGui.Parent = RunService:IsStudio() and Player.PlayerGui or game:GetService("CoreGui")
local Container = Instance.new("Frame")
Container.Name = "Container"
Container.Position = UDim2.new(0, 20, 0.5, -20)
Container.Size = UDim2.new(0, 300, 0.5, 0)
Container.BackgroundTransparency = 1
Container.Parent = NotifGui

-- Система тем
local Themes = {
    ["dark"] = {
        Background = Color3.fromRGB(25, 25, 25),
        BackgroundTransparency = 0.05,
        Border = Color3.fromRGB(60, 60, 60),
        BorderTransparency = 0.7,
        Title = Color3.fromRGB(255, 255, 255),
        Description = Color3.fromRGB(220, 220, 220),
        Shadow = Color3.fromRGB(15, 15, 15),
        ProgressStart = Color3.fromRGB(0, 170, 255),
        ProgressEnd = Color3.fromRGB(255, 50, 50),
        ProgressBg = Color3.fromRGB(40, 40, 40)
    },
    ["light"] = {
        Background = Color3.fromRGB(245, 245, 245),
        BackgroundTransparency = 0.02,
        Border = Color3.fromRGB(200, 200, 200),
        BorderTransparency = 0.5,
        Title = Color3.fromRGB(30, 30, 30),
        Description = Color3.fromRGB(80, 80, 80),
        Shadow = Color3.fromRGB(180, 180, 180),
        ProgressStart = Color3.fromRGB(0, 120, 215),
        ProgressEnd = Color3.fromRGB(215, 0, 0),
        ProgressBg = Color3.fromRGB(220, 220, 220)
    },
    ["crimson"] = {
        Background = Color3.fromRGB(40, 15, 20),
        BackgroundTransparency = 0.05,
        Border = Color3.fromRGB(120, 30, 45),
        BorderTransparency = 0.6,
        Title = Color3.fromRGB(255, 220, 220),
        Description = Color3.fromRGB(240, 180, 180),
        Shadow = Color3.fromRGB(25, 8, 12),
        ProgressStart = Color3.fromRGB(220, 60, 80),
        ProgressEnd = Color3.fromRGB(255, 160, 40),
        ProgressBg = Color3.fromRGB(50, 20, 25)
    },
    ["dark blue"] = {
        Background = Color3.fromRGB(15, 25, 40),
        BackgroundTransparency = 0.05,
        Border = Color3.fromRGB(40, 80, 120),
        BorderTransparency = 0.6,
        Title = Color3.fromRGB(220, 230, 255),
        Description = Color3.fromRGB(180, 200, 240),
        Shadow = Color3.fromRGB(10, 18, 30),
        ProgressStart = Color3.fromRGB(0, 150, 255),
        ProgressEnd = Color3.fromRGB(100, 200, 255),
        ProgressBg = Color3.fromRGB(25, 40, 60)
    },
    ["lavender"] = {
        Background = Color3.fromRGB(45, 30, 60),
        BackgroundTransparency = 0.05,
        Border = Color3.fromRGB(100, 80, 140),
        BorderTransparency = 0.6,
        Title = Color3.fromRGB(240, 230, 255),
        Description = Color3.fromRGB(210, 200, 230),
        Shadow = Color3.fromRGB(35, 25, 45),
        ProgressStart = Color3.fromRGB(160, 120, 240),
        ProgressEnd = Color3.fromRGB(220, 180, 255),
        ProgressBg = Color3.fromRGB(55, 45, 75)
    },
    ["forest"] = {
        Background = Color3.fromRGB(20, 35, 25),
        BackgroundTransparency = 0.05,
        Border = Color3.fromRGB(50, 100, 60),
        BorderTransparency = 0.6,
        Title = Color3.fromRGB(220, 255, 220),
        Description = Color3.fromRGB(180, 220, 180),
        Shadow = Color3.fromRGB(15, 25, 18),
        ProgressStart = Color3.fromRGB(60, 200, 80),
        ProgressEnd = Color3.fromRGB(160, 255, 120),
        ProgressBg = Color3.fromRGB(30, 50, 35)
    },
    ["sunset"] = {
        Background = Color3.fromRGB(50, 25, 35),
        BackgroundTransparency = 0.05,
        Border = Color3.fromRGB(140, 70, 90),
        BorderTransparency = 0.6,
        Title = Color3.fromRGB(255, 220, 180),
        Description = Color3.fromRGB(240, 200, 160),
        Shadow = Color3.fromRGB(35, 18, 25),
        ProgressStart = Color3.fromRGB(255, 120, 80),
        ProgressEnd = Color3.fromRGB(255, 200, 100),
        ProgressBg = Color3.fromRGB(60, 35, 45)
    },
    ["ocean"] = {
        Background = Color3.fromRGB(20, 35, 50),
        BackgroundTransparency = 0.05,
        Border = Color3.fromRGB(60, 120, 180),
        BorderTransparency = 0.6,
        Title = Color3.fromRGB(200, 230, 255),
        Description = Color3.fromRGB(160, 200, 230),
        Shadow = Color3.fromRGB(15, 25, 35),
        ProgressStart = Color3.fromRGB(80, 180, 255),
        ProgressEnd = Color3.fromRGB(140, 220, 255),
        ProgressBg = Color3.fromRGB(30, 50, 70)
    }
}

local function CreateBlurBackground(parent)
    if game:GetService("RunService"):IsStudio() then
        local BlurFrame = Instance.new("Frame")
        BlurFrame.Size = UDim2.new(1, 40, 1, 40)
        BlurFrame.Position = UDim2.new(-0.07, 0, -0.07, 0)
        BlurFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        BlurFrame.BackgroundTransparency = 0.15
        BlurFrame.ZIndex = -1

        local Corner = Instance.new("UICorner")
        Corner.CornerRadius = UDim.new(0, 16)
        Corner.Parent = BlurFrame

        return BlurFrame
    else
        local BlurEffect = Instance.new("BlurEffect")
        BlurEffect.Size = 8
        BlurEffect.Name = "NotificationBlur"

        return BlurEffect
    end
end

local function Image(ID, Button)
    local NewImage = Instance.new(string.format("Image%s", Button and "Button" or "Label"))
    NewImage.Image = ID
    NewImage.BackgroundTransparency = 1
    return NewImage
end

-- Обновленная функция для скругленных углов с более плавным видом
local function CreateRoundedFrame(theme)
    local Frame = Instance.new("Frame")
    Frame.BackgroundColor3 = theme.Background
    Frame.BackgroundTransparency = theme.BackgroundTransparency
    Frame.Size = UDim2.new(1, 0, 1, 0)
    Frame.Position = UDim2.new(0, 0, 0, 0)
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 16)
    Corner.Parent = Frame
    
    return Frame
end

-- Обновленная функция для тени с более плавными углами
local function CreateShadow(theme)
    local Shadow = Instance.new("Frame")
    Shadow.Size = UDim2.new(1, 30, 1, 30)
    Shadow.Position = UDim2.new(-0.05, -15, -0.05, -15)
    Shadow.BackgroundColor3 = theme.Shadow
    Shadow.BackgroundTransparency = 0.1
    Shadow.ZIndex = -1
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 20)
    Corner.Parent = Shadow
    
    return Shadow
end

-- Обновленная функция для границы
local function CreateBorder(theme)
    local Border = Image("http://www.roblox.com/asset/?id=5554236805")
    Border.ScaleType = Enum.ScaleType.Slice
    Border.SliceCenter = Rect.new(3, 3, 297, 297)
    Border.Size = UDim2.new(1, 2, 1, 2)
    Border.Position = UDim2.new(0, -1, 0, -1)
    Border.ImageColor3 = theme.Border
    Border.ImageTransparency = theme.BorderTransparency
    Border.ZIndex = 2
    
    return Border
end

local Padding = 12
local DescriptionPadding = 12
local InstructionObjects = {}
local TweenTime = 0.8
local TweenStyle = Enum.EasingStyle.Quint
local TweenDirection = Enum.EasingDirection.Out
local LastTick = tick()

local function CalculateBounds(TableOfObjects)
    local TableOfObjects = typeof(TableOfObjects) == "table" and TableOfObjects or {}
    local Y = 0
    for _, Object in next, TableOfObjects do
        if Object:IsA("GuiObject") then
            Y += Object.AbsoluteSize.Y
        end
    end
    return Y
end

local CachedObjects = {}

local function Update()
    local DeltaTime = tick() - LastTick
    local PreviousObjects = {}

    for i, ObjectData in ipairs(InstructionObjects) do
        local MainFrame, Delta, Done = ObjectData[1], ObjectData[2], ObjectData[3]

        if not Done then
            if Delta < TweenTime then
                ObjectData[2] = math.clamp(Delta + DeltaTime, 0, TweenTime)
                Delta = ObjectData[2]
            else
                ObjectData[3] = true
            end
        end

        local NewValue = TweenService:GetValue(Delta / TweenTime, TweenStyle, TweenDirection)
        local CurrentPos = MainFrame.Position

        local TotalHeight = 0
        for j = 1, i - 1 do
            local previousFrame = InstructionObjects[j][1]
            if previousFrame and previousFrame.Parent then
                TotalHeight += previousFrame.AbsoluteSize.Y + Padding
            end
        end

        local TargetPos = UDim2.new(0, 0, 0, TotalHeight)
        MainFrame.Position = CurrentPos:Lerp(TargetPos, NewValue)
        table.insert(PreviousObjects, MainFrame)
    end

    CachedObjects = PreviousObjects
    LastTick = tick()
end

RunService:BindToRenderStep("UpdateList", 0, Update)

local TitleSettings = {
    Font = Enum.Font.GothamSemibold,
    Size = 15
}

local DescriptionSettings = {
    Font = Enum.Font.Gotham,
    Size = 13,
    LineHeight = 1.1
}

local MaxWidth = 280

local function Label(Text, Font, Size, Button)
    local Label = Instance.new(string.format("Text%s", Button and "Button" or "Label"))
    Label.Text = Text
    Label.Font = Font
    Label.TextSize = Size
    Label.BackgroundTransparency = 1
    Label.TextXAlignment = Enum.TextXAlignment.Left
    Label.RichText = true
    Label.TextColor3 = Color3.fromRGB(240, 240, 240)
    return Label
end

local function TitleLabel(Text, theme)
    local label = Label(Text, TitleSettings.Font, TitleSettings.Size)
    label.TextColor3 = theme.Title
    return label
end

local function DescriptionLabel(Text, theme)
    local label = Label(Text, DescriptionSettings.Font, DescriptionSettings.Size)
    label.TextColor3 = theme.Description
    label.LineHeight = DescriptionSettings.LineHeight
    return label
end

local PropertyTweenOut = {
    Text = "TextTransparency",
    Fram = "BackgroundTransparency",
    Imag = "ImageTransparency"
}

local function FadeProperty(Object)
    local Prop = PropertyTweenOut[string.sub(Object.ClassName, 1, 4)]
    TweenService:Create(Object, TweenInfo.new(0.3, TweenStyle, TweenDirection), {
        [Prop] = 1
    }):Play()
end

local function FindIndexByDependency(Table, Dependency)
    for Index, ObjectData in ipairs(Table) do
        if ObjectData[1] == Dependency then
            return Index
        end
    end
    return nil
end

local function ResetObjects()
    for _, ObjectData in ipairs(InstructionObjects) do
        ObjectData[2] = 0
        ObjectData[3] = false
    end
end

local function FadeOutAfter(MainFrame, Seconds, ProgressBar, theme)
    local StartTime = tick()
    local EndTime = StartTime + Seconds
    
    -- Update progress bar in real-time
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not MainFrame or not MainFrame.Parent then
            connection:Disconnect()
            return
        end
        
        local CurrentTime = tick()
        local Elapsed = CurrentTime - StartTime
        local Remaining = math.max(0, EndTime - CurrentTime)
        local Progress = math.min(1, Elapsed / Seconds)
        
        if ProgressBar then
            ProgressBar.Size = UDim2.new(1 - Progress, 0, 0, 3)
            -- Плавный переход цвета прогресс-бара
            local hue = 0.3 * (1 - Progress)  -- От зеленого (0.3) к красному (0)
            ProgressBar.BackgroundColor3 = Color3.fromHSV(hue, 0.8, 0.9)
        end
        
        if CurrentTime >= EndTime then
            connection:Disconnect()
        end
    end)
    
    wait(Seconds)

    FadeProperty(MainFrame)
    if ProgressBar then
        FadeProperty(ProgressBar)
    end
    for _, child in ipairs(MainFrame:GetDescendants()) do
        if child:IsA("GuiObject") then
            FadeProperty(child)
        end
    end

    wait(0.3)

    local index = FindIndexByDependency(InstructionObjects, MainFrame)
    if index then
        table.remove(InstructionObjects, index)
    end

    ResetObjects()

    delay(0.1, function()
        if connection then
            connection:Disconnect()
        end
        if MainFrame then
            MainFrame:Destroy()
        end
    end)
end

return {
    -- Функция для получения списка доступных тем
    GetThemes = function()
        local themeList = {}
        for themeName, _ in pairs(Themes) do
            table.insert(themeList, themeName)
        end
        return themeList
    end,
    
    Notify = function(Properties)
        local Properties = typeof(Properties) == "table" and Properties or {}
        local Title = Properties.Title or ""
        local Description = Properties.Description or ""
        local Duration = Properties.Duration or 5
        local ThemeName = Properties.Theme or "dark"
        
        -- Проверка существования темы
        local theme = Themes[ThemeName]
        if not theme then
            warn("Theme '" .. ThemeName .. "' not found. Using default dark theme.")
            theme = Themes["dark"]
        end

        if Title == "" and Description == "" then return end

        local totalHeight = 0

        if Title ~= "" then
            totalHeight += 28
        end

        if Description ~= "" then
            local textSize = TextService:GetTextSize(
                Description,
                DescriptionSettings.Size,
                DescriptionSettings.Font,
                Vector2.new(MaxWidth - DescriptionPadding * 2, 10000)
            )
            totalHeight += textSize.Y + 10
        end

        totalHeight = math.max(totalHeight, 40) + 16 + 6 -- Added 6 pixels for progress bar

        local MainFrame = Instance.new("Frame")
        MainFrame.BackgroundTransparency = 1
        MainFrame.Size = UDim2.new(0, 300, 0, totalHeight)
        MainFrame.Position = UDim2.new(-1, 20, 0, 0)
        MainFrame.Parent = Container

        local BlurBackground = CreateBlurBackground(MainFrame)
        if not BlurBackground:IsA("BlurEffect") then
            BlurBackground.Parent = MainFrame
            BlurBackground.ZIndex = -1
        end

        -- Создаем основной контейнер с закругленными углами
        local NotificationContainer = CreateRoundedFrame(theme)
        NotificationContainer.Parent = MainFrame

        -- Добавляем тень
        local shadow = CreateShadow(theme)
        shadow.Parent = NotificationContainer

        -- Добавляем границу
        local Border = CreateBorder(theme)
        Border.Parent = NotificationContainer

        -- Progress Bar (Timer Line)
        local ProgressBarContainer = Instance.new("Frame")
        ProgressBarContainer.Size = UDim2.new(1, -16, 0, 3)
        ProgressBarContainer.Position = UDim2.new(0, 8, 1, -8)
        ProgressBarContainer.AnchorPoint = Vector2.new(0, 1)
        ProgressBarContainer.BackgroundColor3 = theme.ProgressBg
        ProgressBarContainer.BorderSizePixel = 0
        ProgressBarContainer.ZIndex = 3
        ProgressBarContainer.Parent = NotificationContainer

        local ProgressBarCorner = Instance.new("UICorner")
        ProgressBarCorner.CornerRadius = UDim.new(1, 0)
        ProgressBarCorner.Parent = ProgressBarContainer

        local ProgressBar = Instance.new("Frame")
        ProgressBar.Size = UDim2.new(1, 0, 1, 0)
        ProgressBar.BackgroundColor3 = theme.ProgressStart
        ProgressBar.BorderSizePixel = 0
        ProgressBar.ZIndex = 4
        ProgressBar.Parent = ProgressBarContainer

        local ProgressBarInnerCorner = Instance.new("UICorner")
        ProgressBarInnerCorner.CornerRadius = UDim.new(1, 0)
        ProgressBarInnerCorner.Parent = ProgressBar

        local contentPosition = 8

        if Title ~= "" then
            local titleLabel = TitleLabel(Title, theme)
            titleLabel.Size = UDim2.new(1, -16, 0, 24)
            titleLabel.Position = UDim2.new(0, 8, 0, contentPosition)
            titleLabel.TextTruncate = Enum.TextTruncate.AtEnd
            titleLabel.ZIndex = 3
            titleLabel.Parent = NotificationContainer
            contentPosition += 24 + 4
        end

        if Description ~= "" then
            local descLabel = DescriptionLabel(Description, theme)
            descLabel.TextWrapped = true
            descLabel.Size = UDim2.new(1, -16, 1, -contentPosition - 8 - 6) -- Adjusted for progress bar
            descLabel.Position = UDim2.new(0, 8, 0, contentPosition)
            descLabel.TextYAlignment = Title ~= "" and Enum.TextYAlignment.Top or Enum.TextYAlignment.Center
            descLabel.ZIndex = 3
            descLabel.Parent = NotificationContainer
        end

        table.insert(InstructionObjects, {MainFrame, 0, false})

        coroutine.wrap(FadeOutAfter)(MainFrame, Duration, ProgressBar, theme)

        return MainFrame
    end,
}
